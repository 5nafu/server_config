template Service "remote-service" {
  import "generic-service"

  //specify where the check is executed
  command_endpoint = host.vars.client_endpoint
}



apply Service "disk" {
  import "remote-service"
  check_command = "disk"

  assign where host.vars.client_endpoint
}

apply Service "load" {
  import "remote-service"

  check_command = "load"

  /* Used by the ScheduledDowntime apply rule in `downtimes.conf`. */
  vars.backup_downtime = "02:00-03:00"

  assign where host.vars.client_endpoint
}

apply Service "procs" {
  import "remote-service"

  check_command = "procs"

  assign where host.vars.client_endpoint
}

apply Service "swap" {
  import "remote-service"

  check_command = "swap"

  assign where host.vars.client_endpoint
}

apply Service "users" {
  import "remote-service"

  check_command = "users"

  assign where host.vars.client_endpoint
}

apply Service "apt" {
  import "remote-service"

  check_command = "apt"

  assign where host.vars.os_family == "Debian"
}

apply Service "ntp_peer" {
  import "remote-service"
  check_command = "ntp_peer"
  vars.ntp_address = "127.0.0.1"
  vars.ntp_wsource = "@2"
  vars.ntp_csource = "@1"
  assign where host.vars.os == "Linux"
}

apply Service "imap" {
  import "generic-service"
  check_command = "imap"
  assign where host.vars.mailserver == "True"
}

apply Service "smtp" {
  import "generic-service"
  check_command = "smtp"
  assign where host.vars.mailserver == "True"
}

apply Service "mailq" {
  import "remote-service"
  check_command = "mailq"
  vars.mailq_critical = 50
  vars.mailq_warning = 40
  assign where host.vars.os == "Linux"
}

apply Service "mysql" {
  import "remote-service"
  check_command = "mysql"
  vars.mysql_hostname = "127.0.0.1"
  vars.mysql_file = "/etc/icinga2/my.cnf"
  vars.mysql_group = "mysql"
  assign where host.vars.mysql == "True"
}

apply Service "xmpp" {
  import "generic-service"
  check_command = "tcp"
  vars.tcp_port = 5222
  assign where host.vars.xmpp == "True"
}

apply Service for ( smart => config in host.vars.smart_devices) {
  import "remote-service"
  check_command = "smart"
  vars += config
  assign where host.vars.smart_devices
}

